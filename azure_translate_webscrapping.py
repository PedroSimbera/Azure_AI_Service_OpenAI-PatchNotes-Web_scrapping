# -*- coding: utf-8 -*-
"""Azure-translate-webscrapping.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/****
"""

import requests
from bs4 import BeautifulSoup

path_notes = "https://www.leagueoflegends.com/en-us/news/game-updates/patch-14-21-notes/"

def extract_text_from_html(path_notes):
    response = requests.get(path_notes)

    if response.status_code == 200:
        soup = BeautifulSoup(response.text, 'html.parser')

        #remoção dos scripts e styles
        for script_or_style in soup(["script", "style"]):
            script_or_style.decompose()

        text = soup.get_text(separator= ' ')
        lines = (line.strip() for line in text.splitlines())
        parts = (phrase.strip() for line in lines for phrase in line.split("  "))
        text_clear = '\n'.join(part for part in parts if part)

        # Encontra o elemento que indica onde parar a extração
        stop_element = "Patch Highlights"
        if stop_element in text_clear:
            text_clear = text_clear.split(stop_element)[0]

        return text_clear
    else:
        raise Exception(f"Failed to fetch the webpage. Status code: {response.status_code}")
        return None

extract_text_from_html(path_notes)

!pip install langchain openai

!pip show langchain openai

!pip install langchain-community

from langchain.chat_models import AzureChatOpenAI

client = AzureChatOpenAI(
    azure_endpoint = "https://oai-lab-dio.openai.azure.com/",
    api_key="**********",
    api_version="2024-07-18",
    deployment_name= "gpt-4o-mini",
    max_retries=0
)

def translate_text(text, lang):
    #lista de mensagens
    messages = [
        ("system", "Você é um tradutor de textos e um especialista no jogo do League of Legends e irá traduzir e organizar o patch notes (atualização semanal do jogo)"),
        ("user", f"Traduza o seguinte texto para o idioma {lang} e responda em markdown: {text}")
    ]

    # Invocando o cliente com as mensagens
    response = client.invoke(messages)
    print(response.content)
    return response.content

extracao_texto = extract_text_from_html(path_notes)
print(extracao_texto)

traduzir_extracao = translate_text(extracao_texto, "pt-br")

print(traduzir_extracao)
